%options fp=$LANG_NAME$,prefix=Char_
%options package=$PACKAGE$
%options template=$TEMPLATE$
%options export_terminals=("$LANG_NAME$sym.java", "TK_")

-- This is just a sample lexer and not a real lexer for $LANG_NAME$

$Title
    /.package $package;./
$End

$Globals
    /.import java.util.*;
    import org.eclipse.uide.parser.ILexer;./
$End

$Define
    $package_declaration /.package $package;./
    $action_class /.$file_prefix./
    $additional_interfaces /., ILexer./
    $prs_stream_class /.PrsStream./
    $eof_token /.$_EOF_TOKEN./

    $kw_lexer_class /.Object./
$End

$Include
    uide/LexerVeryBasicMap.gi
$End

$Export
    -- List all the token types the lexer will export to the parser, including keywords (if any)
    SINGLE_LINE_COMMENT
    EOF_TOKEN ERROR_SYMBOL
$End

$Terminals
    CtlCharNotWS

    LF   CR   HT   FF

    a    b    c    d    e    f    g    h    i    j    k    l    m
    n    o    p    q    r    s    t    u    v    w    x    y    z
    _

    A    B    C    D    E    F    G    H    I    J    K    L    M
    N    O    P    Q    R    S    T    U    V    W    X    Y    Z

    0    1    2    3    4    5    6    7    8    9

    AfterASCII   ::= '\u0080..\ufffe'
    Space        ::= ' '
    LF           ::= NewLine
    CR           ::= Return
    HT           ::= HorizontalTab
    FF           ::= FormFeed
    DoubleQuote  ::= '"'
    SingleQuote  ::= "'"
    Percent      ::= '%'
    VerticalBar  ::= '|'
    Exclamation  ::= '!'
    AtSign       ::= '@'
    BackQuote    ::= '`'
    Tilde        ::= '~'
    Sharp        ::= '#'
    DollarSign   ::= '$'
    Ampersand    ::= '&'
    Caret        ::= '^'
    Colon        ::= ':'
    SemiColon    ::= ';'
    BackSlash    ::= '\'
    LeftBrace    ::= '{'
    RightBrace   ::= '}'
    LeftBracket  ::= '['
    RightBracket ::= ']'
    QuestionMark ::= '?'
    Comma        ::= ','
    Dot          ::= '.'
    LessThan     ::= '<'
    GreaterThan  ::= '>'
    Plus         ::= '+'
    Minus        ::= '-'
    Slash        ::= '/'
    Star         ::= '*'
    LeftParen    ::= '('
    RightParen   ::= ')'
    Equal        ::= '='
$End

$Eof
    EOF
$End

$Headers
    /.
		public int[] keywords = {
		    // Place here the list of identifiers for all the keywords.
		    // These will probably all have the form "$_" followed by the
		    // exported name (see above), e.g., "$_CLASS_KEY" for exported
		    // symbol "CLASS_KEY" above.
		};
		public boolean isKeyword(IToken token) { return true; }

		public char[][] getKeywords() { return null; }

		public boolean isKeywordStart(char c) { return false; }
     ./

$Start
    Token
$End

$Rules
    digit ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

    aA ::= a | A
    bB ::= b | B
    cC ::= c | C
    dD ::= d | D
    eE ::= e | E
    fF ::= f | F
    gG ::= g | G
    hH ::= h | H
    iI ::= i | I
    jJ ::= j | J
    kK ::= k | K
    lL ::= l | L
    mM ::= m | M
    nN ::= n | N
    oO ::= o | O
    pP ::= p | P
    qQ ::= q | Q
    rR ::= r | R
    sS ::= s | S
    tT ::= t | T
    uU ::= u | U
    vV ::= v | V
    wW ::= w | W
    xX ::= x | X
    yY ::= y | Y
    zZ ::= z | Z

    letter ::= aA | bB | cC | dD | eE | fF | gG | hH | iI | jJ | kK | lL | mM | nN | oO | pP | qQ | rR | sS | tT | uU | vV | wW | xX | yY | zZ

    any    ::= letter | digit | special | white

    whiteChar ::= Space | LF | CR | HT | FF

    white ::= whiteChar | white whiteChar

    special ::= '+' | '-' | '(' | ')' | '"' | '!' | '@' | '`' | '~' | '.' |
                '%' | '&' | '^' | ':' | ';' | "'" | '\' | '|' | '{' | '}' |
                '[' | ']' | '?' | ',' | '<' | '>' | '=' | '#' | '*' | '_' | '/'

    notEOL ::= letter | digit | special | Space | HT | FF

    notEOLs ::= notEOL | notEOLs notEOL

    slc   ::= '/' '/' notEOLs

    Token ::= white /.$BeginJava skipToken(); $EndJava./
            | slc   /.$BeginJava makeComment($_SINGLE_LINE_COMMENT); $EndJava./

    number ::= digit | number digit
$End
